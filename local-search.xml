<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Markdwon 参考示例</title>
    <link href="/2021/07/10/20210710_Markdown/"/>
    <url>/2021/07/10/20210710_Markdown/</url>
    
    <content type="html"><![CDATA[<h1 id="文本元素"><a href="#文本元素" class="headerlink" title="文本元素"></a>文本元素</h1><p><strong>效果</strong>：</p><p><strong>加粗</strong>，<em>斜体</em>，<del>删除线</del></p><p>通过嵌套达到混合效果：</p><p><em><strong>加粗斜体</strong></em>，<del><strong>加粗删除线</strong></del>，<del><em>斜体删除线</em></del>，<del><em><strong>加粗斜体删除线</strong></em></del></p><p><strong>Markdown</strong>：</p><pre><code>**加粗**，*斜体*，~~删除线~~***加粗斜体***，~~**加粗删除线**~~，~~*斜体删除线*~~，~~***加粗斜体删除线***~~</code></pre><h1 id="区块元素"><a href="#区块元素" class="headerlink" title="区块元素"></a>区块元素</h1><h2 id="段落和换行"><a href="#段落和换行" class="headerlink" title="段落和换行"></a>段落和换行</h2><p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。</p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>Markdown 支持两种标题的语法，类 Setext 和类 atx 形式。</p><p>类 Setext 形式是用底线的形式，利用 =（最高阶标题）和 -（第二阶标题），例如：</p><pre><code>This is an H1=============This is an H2-------------</code></pre><p>任何数量的 = 和 - 都可以有效果。</p><p>类 Atx 形式则是在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶，例如：</p><pre><code># 这是H1## 这是H2### 这是H3#### 这是H4##### 这是H5###### 这是H6</code></pre><p>你可以选择性地「闭合」类 atx 样式的标题，即在行尾加上 #，而行尾的 # 数量也不用和开头一样（行首的 # 数量决定标题的阶数）：</p><pre><code># 这是 H1 ### 这是 H2 ##### 这是 H3 ######</code></pre><h1 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h1><p>Markdown 标记区块引用是使用类似 email 中用 &gt; 的引用方式。在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 &gt; ：</p><p><strong>效果</strong>：</p><blockquote><p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p><p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.</p></blockquote><p><strong>Markdown</strong>：</p><pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt; &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse&gt; id sem consectetuer libero luctus adipiscing.</code></pre><p>区块引用可以嵌套，只要根据层次加上不同数量的 &gt; ：</p><p><strong>效果</strong>：</p><blockquote><p>This is the first level of quoting.</p><blockquote><p>This is nested blockquote.</p></blockquote><p>Back to the first level.</p></blockquote><p><strong>Markdown</strong>：</p><pre><code>&gt; This is the first level of quoting.&gt;&gt; &gt; This is nested blockquote.&gt;&gt; Back to the first level.</code></pre><p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p><p><strong>效果</strong>：</p><blockquote><h2 id="这是一个标题。"><a href="#这是一个标题。" class="headerlink" title="这是一个标题。"></a>这是一个标题。</h2><ol><li>这是第一行列表项。</li><li>这是第二行列表项。</li></ol><p>给出一些例子代码：</p><pre><code>return shell_exec(&quot;echo $input | $markdown_script&quot;);</code></pre></blockquote><p><strong>Markdown</strong>：</p><pre><code>&gt; ## 这是一个标题。&gt; &gt; 1.   这是第一行列表项。&gt; 2.   这是第二行列表项。&gt; &gt; 给出一些例子代码：&gt; &gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</code></pre><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><p>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号、加号或减号作为列表标记：</p><p><strong>效果</strong>：</p><ul><li>Red</li><li>Green</li><li>Blue</li></ul><p><strong>Markdown</strong>：</p><pre><code>* Red* Green* Blue+ Red+ Green+ Blue- Red- Green- Blue</code></pre><p><strong>注意</strong>：星号、加号或减号仅起到标记这是无序列表的作用，即列表标记上使用不同的符号并不会影响输出的 HTML 结果。例如无序列表也可以这样写：</p><pre><code>* Red+ Green- Blue</code></pre><p>有序列表则使用数字接着一个英文句点：</p><p><strong>效果</strong>：</p><ol><li>Bird</li><li>McHale</li><li>Parish</li></ol><p><strong>Markdown</strong>：</p><pre><code>1.  Bird2.  McHale3.  Parish</code></pre><p><strong>注意</strong>：数字仅起到标记这是有序列表的作用，即列表标记上使用的数字并不会影响输出的 HTML 结果。例如有序列表也可以这样写：</p><pre><code>1.  Bird1.  McHale1.  Parish</code></pre><p>或者：</p><pre><code>3. Bird1. McHale2. Parish</code></pre><p>虽然可以得到完全相同的HTML输出，但是建议第一个项目最好还是从 1. 开始，因为 Markdown（可能）支持有序列表的 start 属性。</p><p>列表项目标记通常是放在最左边，但是也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。</p><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符：</p><p><strong>效果：</strong></p><ol><li><p>金樽清酒斗十千，玉盘珍羞直万钱。</p><p> 停杯投箸不能食，拔剑四顾心茫然。</p><p> 欲渡黄河冰塞川，将登太行雪满山。</p><p> 闲来垂钓碧溪上，忽复乘舟梦日边。</p><p> 行路难，行路难，多歧路，今安在？</p><p> 长风破浪会有时，直挂云帆济沧海。</p></li><li><p>莫听穿林打叶声，何妨吟啸且徐行。<br> 竹杖芒鞋轻胜马，谁怕？一蓑烟雨任平生。</p><p> 料峭春风吹酒醒，微冷，山头斜照却相迎。<br> 回首向来萧瑟处，归去，也无风雨也无晴。</p></li></ol><p><strong>Markdown</strong>:</p><pre><code>1.  金樽清酒斗十千，玉盘珍羞直万钱。    停杯投箸不能食，拔剑四顾心茫然。    欲渡黄河冰塞川，将登太行雪满山。    闲来垂钓碧溪上，忽复乘舟梦日边。    行路难，行路难，多歧路，今安在？    长风破浪会有时，直挂云帆济沧海。2.  莫听穿林打叶声，何妨吟啸且徐行。    竹杖芒鞋轻胜马，谁怕？一蓑烟雨任平生。        料峭春风吹酒醒，微冷，山头斜照却相迎。    回首向来萧瑟处，归去，也无风雨也无晴。</code></pre><p><strong>注意</strong>：项目列表内以及项目列表之间如果需要换行，则和普通文本元素一样需要使用空行。</p><p>项目内可以使用其他引用元素，例如：</p><p><strong>效果</strong>：</p><ul><li><p>A list item with a blockquote:</p><blockquote><p>This is a blockquote<br>inside a list item.</p><blockquote><p>各种效果都可以实现</p></blockquote></blockquote></li></ul><ul><li>简单来说，项目列表内的区域等价于缩进之后的普通区域  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure></li></ul><p><strong>Markdown</strong>：</p><pre><code>*   A list item with a blockquote:    &gt; This is a blockquote    &gt; inside a list item.    &gt;&gt; 各种效果都可以实现-   简单来说，项目列表内的区域等价于缩进之后的普通区域    <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure></code></pre><p>如果不小心产生了项目列表，例如想表达</p><p>2004. 雅典奥运会</p><p>2008. 北京奥运会</p><p>2012. 伦敦奥运会</p><p>但是会得到如下项目列表效果：</p><ol start="2004"><li><p>雅典奥运会</p></li><li><p>北京奥运会</p></li><li><p>伦敦奥运会</p></li></ol><p>解决方案：在“ . ” 前加上“ \ ”，即：</p><pre><code>2004\. 雅典奥运会2008\. 北京奥运会2012\. 伦敦奥运会</code></pre><h1 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h1><p>要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如：</p><p><strong>效果</strong>：</p><p>这是一个普通段落：</p><pre><code>这是一个代码区块。</code></pre><p><strong>Markdown</strong>：</p><pre><code>这是一个普通段落：    这是一个代码区块。</code></pre><p>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p><p>也可以使用 ` 或 ``` 来实现行内代码，例如：</p><p><strong>效果</strong>：</p><p>这是<code>行内代码 code</code>，这是多行代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><p><strong>Markdown</strong>：</p><pre><code>这是`行内代码 code`，这是多行代码：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure></code></pre><h1 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h1><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><pre><code>* * *********- - ---------------------</code></pre><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><p>Markdown 支持两种形式的链接语法： 行内式和参考式两种形式。</p><p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p><p>要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p><p><strong>效果</strong>：</p><p>这是行内式的 <a href="http://example.com/" title="标题">例子</a>。</p><p>这是行内式的 <strong><a href="http://example.com/" title="标题">加粗例子</a></strong>.</p><p><a href="http://example.net/">这个链接</a> 没有“标题”文本段。</p><p><strong>Markdown</strong>：</p><pre><code>这是行内式的 [例子](http://example.com/ &quot;标题&quot;)。这是行内式的 **[加粗例子](http://example.com/ &quot;标题&quot;)**.[这个链接](http://example.net/) 没有“标题”文本段。</code></pre><p>如果你是要链接到同样主机的资源，你可以使用相对路径：</p><pre><code>See my [About](/about/) page for details.</code></pre><p>参考式的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：</p><pre><code>This is [an example][id] reference-style link.</code></pre><p>接着，在文件的任意处，你可以把这个标记的链接内容定义出来：</p><pre><code>[id]: http://example.com/  &quot;Optional Title Here&quot;</code></pre><p>链接内容定义的形式为：</p><ul><li>方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字</li><li>接着一个冒号</li><li>接着一个以上的空格或制表符</li><li>接着链接的网址</li><li>选择性地接着 title 内容，可以用单引号、双引号或是括弧包着</li></ul><p>下面这三种链接的定义都是相同：</p><pre><code>[foo]: http://example.com/  &quot;Optional Title Here&quot;[foo]: http://example.com/  &#39;Optional Title Here&#39;[foo]: http://example.com/  (Optional Title Here)</code></pre><p>注意：有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。</p><p>链接网址也可以用方括号包起来：</p><pre><code>[id]: [http://example.com] &quot;Optional Title Here&quot;</code></pre><p>你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：</p><pre><code>[id]: http://example.com/longish/path/to/resource/here    &quot;Optional Title Here&quot;</code></pre><p>网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。</p><p>链接辨别标签可以有字母、数字、空白和标点符号，但是并不区分大小写，因此下面两个链接是一样的：</p><pre><code>[link text][a][link text][A]</code></pre><p>隐式链接标记功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 “Google” 链接到 google.com，你可以简化成：</p><pre><code>[Google][]</code></pre><p>然后定义链接内容：</p><pre><code>[Google]: http://google.com/</code></pre><p>由于链接文字可能包含空白，所以这种简化型的标记内也许包含多个单词：</p><pre><code>Visit [Python documentation][] for more information.  [Python documentation]: https://docs.python.org/</code></pre><p>链接的定义可以放在文件中的任何一个地方，一般直接放在链接出现段落的后面，也可以把它放在文件最后面，就像是注解一样。</p><p>下面是两个参考式链接的例子：</p><p>使用辨识链接的标记：</p><pre><code>I get 10 times more traffic from **[Google][1]** than from_[Yahoo][2]_ or [MSN][3].  [1]: http://google.com/        &quot;Google&quot;  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;  [3]: http://search.msn.com/    &quot;MSN Search&quot;</code></pre><p>使用链接名称的方式：</p><pre><code>I get 10 times more traffic from [Google][] than from[Yahoo][] or [MSN][].  [google]: http://google.com/        &quot;Google&quot;  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;</code></pre><h1 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h1><p><strong>效果</strong>：</p><p>行内公式：$m\times n$</p><p>行内公式：<br>$<br>C_{m\times k}=A_{m\times n}\cdot B_{n\times k}<br>$</p><p>块级公式：<br>$$C_{m\times k}=A_{m\times n}\cdot B_{n\times k}$$</p><p>块级公式：<br>$$<br>C_{m\times k}=A_{m\times n}\cdot B_{n\times k}<br>$$</p><p><strong>Markdown</strong>：</p><pre><code>行内公式：$m\times n$行内公式：$C_&#123;m\times k&#125;=A_&#123;m\times n&#125;\cdot B_&#123;n\times k&#125;$块级公式：$$C_&#123;m\times k&#125;=A_&#123;m\times n&#125;\cdot B_&#123;n\times k&#125;$$块级公式：$$C_&#123;m\times k&#125;=A_&#123;m\times n&#125;\cdot B_&#123;n\times k&#125;$$</code></pre><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： 行内式和参考式。</p><p><strong>效果</strong>：</p><p><img src="https://images.pexels.com/photos/7175579/pexels-photo-7175579.jpeg?h=300" alt="演示图片"><br><img src="https://images.pexels.com/photos/7175579/pexels-photo-7175579.jpeg?h=300" alt="演示图片" title="自定义标题"></p><p><strong>Markdown</strong>：</p><pre><code>![演示图片](https://images.pexels.com/photos/7175579/pexels-photo-7175579.jpeg?h=300)![演示图片](https://images.pexels.com/photos/7175579/pexels-photo-7175579.jpeg?h=300 &quot;自定义标题&quot;)</code></pre><p>详细叙述如下：</p><ul><li>一个惊叹号 !</li><li>接着一个方括号，里面放上图片的替代文字</li><li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 ‘title’ 文字。</li></ul><p>参考式的图片语法：</p><pre><code>![Alt text][id]  [id]: url/to/image  &quot;Optional title attribute&quot;</code></pre><p><strong>注意</strong>：到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的<code>&lt;img&gt;</code>标签。</p><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><p><strong>效果</strong>：</p><table><thead><tr><th align="left">左对齐</th><th align="center">居中对齐</th><th align="right">右对齐</th></tr></thead><tbody><tr><td align="left">A1</td><td align="center">B1</td><td align="right">C1</td></tr><tr><td align="left">A2</td><td align="center">B2</td><td align="right">C2</td></tr></tbody></table><p><strong>Markdown</strong>：</p><pre><code>| 左对齐 | 居中对齐 | 右对齐 || :---- | :------: | ----: || A1    | B1       | C1    || A2    | B2       | C2    |</code></pre><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="反斜杠"><a href="#反斜杠" class="headerlink" title="反斜杠"></a>反斜杠</h2><p>Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：</p><p><strong>效果</strong>:</p><p>**加粗**</p><p><strong>Markdown</strong>：</p><pre><code>\*\*加粗\*\*</code></pre><h2 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h2><p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用方括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</p><pre><code>&lt;http://example.com/&gt;&lt;address@example.com&gt;</code></pre><h1 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h1><ul><li><a href="https://daringfireball.net/projects/markdown/">JOHN GRUBER</a></li><li><a href="https://www.markdown.cn/#block-elements">Markdown 语法说明</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>示例</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的首篇博客</title>
    <link href="/2021/07/10/20210710_MyFirstBlog/"/>
    <url>/2021/07/10/20210710_MyFirstBlog/</url>
    
    <content type="html"><![CDATA[<p>这是我的首篇博客</p><p>测试使用</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World 博客的参考示例</title>
    <link href="/2021/07/10/20210710_HelloWorld/"/>
    <url>/2021/07/10/20210710_HelloWorld/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>示例</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
